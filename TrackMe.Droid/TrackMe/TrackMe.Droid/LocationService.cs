//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18408
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by SlSvcUtil, version 5.0.61118.0
// 

namespace TrackMe.WCF
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneLocation", Namespace="http://schemas.datacontract.org/2004/07/TrackMe.WCF")]
    public partial class PhoneLocation : object
    {
        
        private double LatField;
        
        private double LngField;
        
        private string UidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat
        {
            get
            {
                return this.LatField;
            }
            set
            {
                this.LatField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lng
        {
            get
            {
                return this.LngField;
            }
            set
            {
                this.LngField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uid
        {
            get
            {
                return this.UidField;
            }
            set
            {
                this.UidField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ILocationService")]
public interface ILocationService
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocationService/GetAll", ReplyAction="http://tempuri.org/ILocationService/GetAllResponse")]
    System.IAsyncResult BeginGetAll(System.AsyncCallback callback, object asyncState);
    
    TrackMe.WCF.PhoneLocation[] EndGetAll(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocationService/SetLocation", ReplyAction="http://tempuri.org/ILocationService/SetLocationResponse")]
    System.IAsyncResult BeginSetLocation(string uid, double lat, double lng, System.AsyncCallback callback, object asyncState);
    
    void EndSetLocation(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ILocationServiceChannel : ILocationService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public TrackMe.WCF.PhoneLocation[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((TrackMe.WCF.PhoneLocation[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class LocationServiceClient : System.ServiceModel.ClientBase<ILocationService>, ILocationService
{
    
    private BeginOperationDelegate onBeginGetAllDelegate;
    
    private EndOperationDelegate onEndGetAllDelegate;
    
    private System.Threading.SendOrPostCallback onGetAllCompletedDelegate;
    
    private BeginOperationDelegate onBeginSetLocationDelegate;
    
    private EndOperationDelegate onEndSetLocationDelegate;
    
    private System.Threading.SendOrPostCallback onSetLocationCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public LocationServiceClient()
    {
    }
    
    public LocationServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public LocationServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public LocationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public LocationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<GetAllCompletedEventArgs> GetAllCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetLocationCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult ILocationService.BeginGetAll(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAll(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    TrackMe.WCF.PhoneLocation[] ILocationService.EndGetAll(System.IAsyncResult result)
    {
        return base.Channel.EndGetAll(result);
    }
    
    private System.IAsyncResult OnBeginGetAll(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((ILocationService)(this)).BeginGetAll(callback, asyncState);
    }
    
    private object[] OnEndGetAll(System.IAsyncResult result)
    {
        TrackMe.WCF.PhoneLocation[] retVal = ((ILocationService)(this)).EndGetAll(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAllCompleted(object state)
    {
        if ((this.GetAllCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllCompleted(this, new GetAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAllAsync()
    {
        this.GetAllAsync(null);
    }
    
    public void GetAllAsync(object userState)
    {
        if ((this.onBeginGetAllDelegate == null))
        {
            this.onBeginGetAllDelegate = new BeginOperationDelegate(this.OnBeginGetAll);
        }
        if ((this.onEndGetAllDelegate == null))
        {
            this.onEndGetAllDelegate = new EndOperationDelegate(this.OnEndGetAll);
        }
        if ((this.onGetAllCompletedDelegate == null))
        {
            this.onGetAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllDelegate, null, this.onEndGetAllDelegate, this.onGetAllCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult ILocationService.BeginSetLocation(string uid, double lat, double lng, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginSetLocation(uid, lat, lng, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void ILocationService.EndSetLocation(System.IAsyncResult result)
    {
        base.Channel.EndSetLocation(result);
    }
    
    private System.IAsyncResult OnBeginSetLocation(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string uid = ((string)(inValues[0]));
        double lat = ((double)(inValues[1]));
        double lng = ((double)(inValues[2]));
        return ((ILocationService)(this)).BeginSetLocation(uid, lat, lng, callback, asyncState);
    }
    
    private object[] OnEndSetLocation(System.IAsyncResult result)
    {
        ((ILocationService)(this)).EndSetLocation(result);
        return null;
    }
    
    private void OnSetLocationCompleted(object state)
    {
        if ((this.SetLocationCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.SetLocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void SetLocationAsync(string uid, double lat, double lng)
    {
        this.SetLocationAsync(uid, lat, lng, null);
    }
    
    public void SetLocationAsync(string uid, double lat, double lng, object userState)
    {
        if ((this.onBeginSetLocationDelegate == null))
        {
            this.onBeginSetLocationDelegate = new BeginOperationDelegate(this.OnBeginSetLocation);
        }
        if ((this.onEndSetLocationDelegate == null))
        {
            this.onEndSetLocationDelegate = new EndOperationDelegate(this.OnEndSetLocation);
        }
        if ((this.onSetLocationCompletedDelegate == null))
        {
            this.onSetLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetLocationCompleted);
        }
        base.InvokeAsync(this.onBeginSetLocationDelegate, new object[] {
                    uid,
                    lat,
                    lng}, this.onEndSetLocationDelegate, this.onSetLocationCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override ILocationService CreateChannel()
    {
        return new LocationServiceClientChannel(this);
    }
    
    private class LocationServiceClientChannel : ChannelBase<ILocationService>, ILocationService
    {
        
        public LocationServiceClientChannel(System.ServiceModel.ClientBase<ILocationService> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginGetAll(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetAll", _args, callback, asyncState);
            return _result;
        }
        
        public TrackMe.WCF.PhoneLocation[] EndGetAll(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            TrackMe.WCF.PhoneLocation[] _result = ((TrackMe.WCF.PhoneLocation[])(base.EndInvoke("GetAll", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginSetLocation(string uid, double lat, double lng, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[3];
            _args[0] = uid;
            _args[1] = lat;
            _args[2] = lng;
            System.IAsyncResult _result = base.BeginInvoke("SetLocation", _args, callback, asyncState);
            return _result;
        }
        
        public void EndSetLocation(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("SetLocation", _args, result);
        }
    }
}
